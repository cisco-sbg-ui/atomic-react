@import "../../styles";

@include theme(a-data-table--expandable) using ($theme) {
  & tr {
    display: flex;
    flex-flow: row wrap;
    height: 100%;
    min-height: 30px;

    &[data-expandable-row="true"] {
      & td:nth-last-child(2) {
        border-right-width: $border-width;
        border-right-style: solid;
        border-right-color: map-deep-get($theme, "control", "stroke-color");
      }
    }

    & th {
      flex: 1;
      line-height: 200%;
      &:first-child {
        border-right: none;
        min-width: 30px;
        flex-basis: 0;
        flex-grow: 0;

        & > span {
          @include sr-only;
        }
      }
      &:nth-child(2) {
        border-left: none;
        padding-left: 0;
      }
      &:last-of-type {
        position: absolute;
        height: 1px;
        width: 1px;
        overflow: hidden;
        clip: rect(1px 1px 1px 1px);
        clip: rect(1px, 1px, 1px, 1px);
      }
    }

    & td {
      display: block;
      flex: 1;
      line-height: 200%;

      /** 
        * The cells which contains button(s) to toggle content.
        * While some cells might not have the expand button, they
        * still need to be styled to match sibling cells which
        * do render a button
        */
      &:first-child {
        flex: 0;
        display: flex;
        align-items: center;
        min-width: 30px;
        padding: 0;

        /* Button to expand content */
        & button {
          display: flex;
          align-items: center;
          justify-content: center;
          padding: 0;
          width: 100%;
          height: 100%;
          background: transparent;
          border: none;
          color: unset;
          font-family: inherit;
        }
      }

      /* The first cell in which a library consumer's content renders */
      &:nth-child(2) {
        padding-left: 0;
      }

      /* The cell that contains the hidden content */
      &:last-child[data-expandable-content] {
        display: block;
        padding: 0 10px;
        visibility: visible;
        overflow: hidden;
        max-height: 600px;
        opacity: 1;
        flex-basis: 100%;
        border-width: $border-width;
        border-style: solid;
        border-color: map-deep-get($theme, "control", "stroke-color");
        background: map-deep-get($theme, "table", "row-hover-color");
        border-top: none;
        border-bottom: none;

        &[hidden] {
          max-height: 0;
          visibility: hidden;
          opacity: 0;
          padding: unset;
        }
      }
    }
  }
}

.a-data-table {
  &__header {
    &__sort {
      &.a-icon {
        width: 10px;
        opacity: 0;
      }

      &--active.a-icon {
        opacity: 1;
      }
    }

    &--sortable {
      cursor: pointer;
    }

    &:hover {
      .a-icon.a-data-table__header__sort:not(.a-icon.a-data-table__header__sort--active) {
        opacity: 0.5;
      }
    }
  }

  .text-start {
    text-align: start;
  }

  .text-center {
    text-align: center;
  }

  .text-end {
    text-align: end;
  }
}
